/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ProductCreateInput: { // input type
    category?: string | null; // String
    colors: Array<string | null>; // [String]!
    description?: string | null; // String
    id?: string | null; // String
    name: string; // String!
    rarety?: boolean | null; // Boolean
    size: NexusGenInputs['SizeCreateInput']; // SizeCreateInput!
    status: string; // String!
  }
  SizeCreateInput: { // input type
    height: number; // Int!
    length: number; // Int!
    radius: number; // Int!
    width: number; // Int!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Address: { // root type
    address?: string | null; // String
    apartment?: string | null; // String
    category?: string | null; // String
    city?: string | null; // String
    country?: string | null; // String
    firstName?: string | null; // String
    lastName?: string | null; // String
    phone1?: string | null; // String
    phone2?: string | null; // String
    state?: string | null; // String
    zipcode?: string | null; // String
  }
  CreditCard: { // root type
    cardNo?: string | null; // String
    expiryDate?: string | null; // String
    holderName?: string | null; // String
  }
  Customer: { // root type
    email?: string | null; // String
    firstName?: string | null; // String
    lastName?: string | null; // String
    password?: string | null; // String
    paypalId?: string | null; // String
    phone?: string | null; // String
    role?: string | null; // String
    status?: string | null; // String
    wechatId?: string | null; // String
  }
  Delivery: { // root type
    deliveryCompany?: string | null; // String
    deliveryType?: string | null; // String
    traceNo?: string | null; // String
  }
  Image: { // root type
    category?: string | null; // String
    format?: string | null; // String
    imageLink?: string | null; // String
    length?: number | null; // Int
    name?: string | null; // String
    size?: number | null; // Float
    width?: number | null; // Int
  }
  Mutation: {};
  Order: { // root type
    billingAddress?: string | null; // String
    customer?: string | null; // String
    customerId?: string | null; // String
    delivery?: string | null; // String
    orderDate?: string | null; // String
    orderStatus?: string | null; // String
    payment?: string | null; // String
    productsInOrder?: string | null; // String
    shippingAddress?: string | null; // String
  }
  Payment: { // root type
    amount?: string | null; // String
    date?: string | null; // String
    method?: string | null; // String
    payMethodId?: string | null; // String
    status?: string | null; // String
  }
  PriceList: { // root type
    price?: number | null; // Float
  }
  Product: { // root type
    category?: string | null; // String
    colors: Array<string | null>; // [String]!
    description?: string | null; // String
    id: string; // String!
    name: string; // String!
    rarety?: boolean | null; // Boolean
    status: string; // String!
  }
  ProductInOrder: { // root type
    Order?: string | null; // String
    orderId?: string | null; // String
    price?: string | null; // String
    product?: string | null; // String
    productId?: string | null; // String
    qty?: string | null; // String
  }
  Query: {};
  Review: { // root type
    description?: string | null; // String
    rating: number; // Int!
    title?: string | null; // String
  }
  Size: { // root type
    height?: number | null; // Float
    length?: number | null; // Float
    radius?: number | null; // Float
    width?: number | null; // Float
  }
  Stock: { // root type
    action?: string | null; // String
    actionAmount?: number | null; // Float
    actionPrice?: number | null; // Float
    total?: number | null; // Float
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Address: { // field return type
    address: string | null; // String
    apartment: string | null; // String
    category: string | null; // String
    city: string | null; // String
    country: string | null; // String
    firstName: string | null; // String
    lastName: string | null; // String
    phone1: string | null; // String
    phone2: string | null; // String
    state: string | null; // String
    zipcode: string | null; // String
  }
  CreditCard: { // field return type
    cardNo: string | null; // String
    expiryDate: string | null; // String
    holderName: string | null; // String
  }
  Customer: { // field return type
    Review: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    addresses: Array<NexusGenRootTypes['Address'] | null> | null; // [Address]
    creditCards: Array<NexusGenRootTypes['CreditCard'] | null> | null; // [CreditCard]
    email: string | null; // String
    firstName: string | null; // String
    lastName: string | null; // String
    orders: Array<NexusGenRootTypes['Order'] | null> | null; // [Order]
    password: string | null; // String
    paypalId: string | null; // String
    phone: string | null; // String
    role: string | null; // String
    status: string | null; // String
    wechatId: string | null; // String
  }
  Delivery: { // field return type
    deliveryCompany: string | null; // String
    deliveryType: string | null; // String
    traceNo: string | null; // String
  }
  Image: { // field return type
    category: string | null; // String
    format: string | null; // String
    imageLink: string | null; // String
    length: number | null; // Int
    name: string | null; // String
    products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    size: number | null; // Float
    width: number | null; // Int
  }
  Mutation: { // field return type
    createProduct: NexusGenRootTypes['Product']; // Product!
  }
  Order: { // field return type
    billingAddress: string | null; // String
    customer: string | null; // String
    customerId: string | null; // String
    delivery: string | null; // String
    orderDate: string | null; // String
    orderStatus: string | null; // String
    payment: string | null; // String
    productsInOrder: string | null; // String
    shippingAddress: string | null; // String
  }
  Payment: { // field return type
    amount: string | null; // String
    date: string | null; // String
    method: string | null; // String
    payMethodId: string | null; // String
    status: string | null; // String
  }
  PriceList: { // field return type
    price: number | null; // Float
  }
  Product: { // field return type
    category: string | null; // String
    colors: Array<string | null>; // [String]!
    description: string | null; // String
    id: string; // String!
    images: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    name: string; // String!
    priceList: Array<NexusGenRootTypes['PriceList'] | null>; // [PriceList]!
    rarety: boolean | null; // Boolean
    reviews: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    size: NexusGenRootTypes['Size'] | null; // Size
    status: string; // String!
    stock: Array<NexusGenRootTypes['Stock'] | null>; // [Stock]!
  }
  ProductInOrder: { // field return type
    Order: string | null; // String
    orderId: string | null; // String
    price: string | null; // String
    product: string | null; // String
    productId: string | null; // String
    qty: string | null; // String
  }
  Query: { // field return type
    allProducts: NexusGenRootTypes['Product'][]; // [Product!]!
    productById: NexusGenRootTypes['Product'] | null; // Product
  }
  Review: { // field return type
    description: string | null; // String
    rating: number; // Int!
    title: string | null; // String
  }
  Size: { // field return type
    height: number | null; // Float
    length: number | null; // Float
    radius: number | null; // Float
    width: number | null; // Float
  }
  Stock: { // field return type
    action: string | null; // String
    actionAmount: number | null; // Float
    actionPrice: number | null; // Float
    total: number | null; // Float
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    address: 'String'
    apartment: 'String'
    category: 'String'
    city: 'String'
    country: 'String'
    firstName: 'String'
    lastName: 'String'
    phone1: 'String'
    phone2: 'String'
    state: 'String'
    zipcode: 'String'
  }
  CreditCard: { // field return type name
    cardNo: 'String'
    expiryDate: 'String'
    holderName: 'String'
  }
  Customer: { // field return type name
    Review: 'Review'
    addresses: 'Address'
    creditCards: 'CreditCard'
    email: 'String'
    firstName: 'String'
    lastName: 'String'
    orders: 'Order'
    password: 'String'
    paypalId: 'String'
    phone: 'String'
    role: 'String'
    status: 'String'
    wechatId: 'String'
  }
  Delivery: { // field return type name
    deliveryCompany: 'String'
    deliveryType: 'String'
    traceNo: 'String'
  }
  Image: { // field return type name
    category: 'String'
    format: 'String'
    imageLink: 'String'
    length: 'Int'
    name: 'String'
    products: 'Product'
    size: 'Float'
    width: 'Int'
  }
  Mutation: { // field return type name
    createProduct: 'Product'
  }
  Order: { // field return type name
    billingAddress: 'String'
    customer: 'String'
    customerId: 'String'
    delivery: 'String'
    orderDate: 'String'
    orderStatus: 'String'
    payment: 'String'
    productsInOrder: 'String'
    shippingAddress: 'String'
  }
  Payment: { // field return type name
    amount: 'String'
    date: 'String'
    method: 'String'
    payMethodId: 'String'
    status: 'String'
  }
  PriceList: { // field return type name
    price: 'Float'
  }
  Product: { // field return type name
    category: 'String'
    colors: 'String'
    description: 'String'
    id: 'String'
    images: 'Image'
    name: 'String'
    priceList: 'PriceList'
    rarety: 'Boolean'
    reviews: 'Review'
    size: 'Size'
    status: 'String'
    stock: 'Stock'
  }
  ProductInOrder: { // field return type name
    Order: 'String'
    orderId: 'String'
    price: 'String'
    product: 'String'
    productId: 'String'
    qty: 'String'
  }
  Query: { // field return type name
    allProducts: 'Product'
    productById: 'Product'
  }
  Review: { // field return type name
    description: 'String'
    rating: 'Int'
    title: 'String'
  }
  Size: { // field return type name
    height: 'Float'
    length: 'Float'
    radius: 'Float'
    width: 'Float'
  }
  Stock: { // field return type name
    action: 'String'
    actionAmount: 'Float'
    actionPrice: 'Float'
    total: 'Float'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createProduct: { // args
      data: NexusGenInputs['ProductCreateInput']; // ProductCreateInput!
    }
  }
  Query: {
    productById: { // args
      id?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}